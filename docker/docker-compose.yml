services:
  api-gateway:
    image: ${DOCKER_REGISTRY-}api-gateway
    build:
      context: ..
      dockerfile: docker/Dockerfile.ApiGateway
    ports:
      - "5000:80"
    depends_on:
      identity-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - IdentityService__Url=http://identity-service
    - ProductService__Url=http://product-service
    - OrderService__Url=http://order-service
    networks:
      - moducart-network
    restart: unless-stopped

  identity-service:
    image: ${DOCKER_REGISTRY-}identity-service
    build:
      context: ..
      dockerfile: docker/Dockerfile.IdentityService
    ports:
      - "5001:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - moducart-network
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDbSettings__ConnectionString=mongodb://root:root_password@mongo-db:27017
    restart: unless-stopped
  
  product-service:
    image: ${DOCKER_REGISTRY-}product-service
    build:
      context: ..
      dockerfile: docker/Dockerfile.ProductService
    ports:
      - "5002:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - moducart-network
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDbSettings__ConnectionString=mongodb://root:root_password@mongo-db:27017
    restart: unless-stopped

  order-service:
    image: ${DOCKER_REGISTRY-}order-service
    build:
      context: ..
      dockerfile: docker/Dockerfile.OrderService
    ports:
      - "5003:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - moducart-network
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDbSettings__ConnectionString=mongodb://root:root_password@mongo-db:27017
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: mongo-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root_password
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - moducart-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

networks:
  moducart-network:
    driver: bridge
    attachable: true
    name: moducart-network

volumes:
  mongo-data: